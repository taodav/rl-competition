
/*
 * This code was auto-generated by the parameter script. Do not change these values manually.
 */
package org.rlcommunity.environments.competition2009.Tetris.Generalized;

import org.rlcommunity.environments.competition2009.Tetris.GameState;
import org.rlcommunity.environments.competition2009.Tetris.TetrlaisPiece;
import java.util.Vector;

public class GenTetrisParamData {

    GameState setParameters(int ParamSet) {
		int width=0;
		int height=0;
		double []pieceWeights=null;
		double rewardExponent=1.0d;
		double evilness = 0.5;
		int evilAgentType = 0;
		double benchmarkScore = 0.0;
		
		Vector<TetrlaisPiece> possibleBlocks=new Vector<TetrlaisPiece>();
        possibleBlocks.add(TetrlaisPiece.makeLine());
		possibleBlocks.add(TetrlaisPiece.makeSquare());
        possibleBlocks.add(TetrlaisPiece.makeTri());
		possibleBlocks.add(TetrlaisPiece.makeSShape());
		possibleBlocks.add(TetrlaisPiece.makeZShape());
		possibleBlocks.add(TetrlaisPiece.makeLShape());
		possibleBlocks.add(TetrlaisPiece.makeJShape());
 	
        switch (ParamSet) {
          case 0:
			width=6;
			height=16;
			rewardExponent=1.839278d;
			evilness = 0.194066d;
			evilAgentType = 1;
			benchmarkScore=6827.000000d;
           
			pieceWeights=new double[]{0.983887d, 0.776750d, 0.732311d, 0.765160d, 0.929092d, 0.964960d, 0.762983d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 1:
			width=10;
			height=21;
			rewardExponent=1.621574d;
			evilness = 0.554109d;
			evilAgentType = 1;
			benchmarkScore=2264.000000d;
           
			pieceWeights=new double[]{0.582279d, 0.708738d, 0.838975d, 0.747145d, 0.707311d, 0.823994d, 0.610436d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 2:
			width=7;
			height=19;
			rewardExponent=1.319224d;
			evilness = 0.172945d;
			evilAgentType = 0;
			benchmarkScore=4954.000000d;
           
			pieceWeights=new double[]{0.505141d, 0.500673d, 0.888836d, 0.893245d, 0.971982d, 0.920065d, 0.530240d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 3:
			width=7;
			height=21;
			rewardExponent=1.353370d;
			evilness = 0.437863d;
			evilAgentType = 1;
			benchmarkScore=4471.000000d;
           
			pieceWeights=new double[]{0.789987d, 0.626903d, 0.759611d, 0.950797d, 0.600952d, 0.896092d, 0.881971d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 4:
			width=11;
			height=22;
			rewardExponent=1.760434d;
			evilness = 0.474675d;
			evilAgentType = 2;
			benchmarkScore=2357.000000d;
           
			pieceWeights=new double[]{0.593029d, 0.834154d, 0.789600d, 0.993720d, 0.827513d, 0.951908d, 0.547337d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 5:
			width=6;
			height=18;
			rewardExponent=1.308916d;
			evilness = 0.020393d;
			evilAgentType = 2;
			benchmarkScore=6547.000000d;
           
			pieceWeights=new double[]{0.682073d, 0.500888d, 0.808371d, 0.585341d, 0.787340d, 0.610769d, 0.760549d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 6:
			width=6;
			height=19;
			rewardExponent=1.358015d;
			evilness = 0.027500d;
			evilAgentType = 1;
			benchmarkScore=6536.000000d;
           
			pieceWeights=new double[]{0.587769d, 0.942705d, 0.625844d, 0.548135d, 0.962964d, 0.792190d, 0.996457d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 7:
			width=8;
			height=21;
			rewardExponent=1.363207d;
			evilness = 0.067066d;
			evilAgentType = 2;
			benchmarkScore=4422.000000d;
           
			pieceWeights=new double[]{0.974027d, 0.800913d, 0.899204d, 0.879506d, 0.500346d, 0.602490d, 0.597010d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 8:
			width=9;
			height=21;
			rewardExponent=1.466943d;
			evilness = 0.232561d;
			evilAgentType = 1;
			benchmarkScore=3456.000000d;
           
			pieceWeights=new double[]{0.748057d, 0.661261d, 0.722788d, 0.517652d, 0.711627d, 0.848379d, 0.695118d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 9:
			width=6;
			height=21;
			rewardExponent=1.890653d;
			evilness = 0.337115d;
			evilAgentType = 3;
			benchmarkScore=6790.000000d;
           
			pieceWeights=new double[]{0.787618d, 0.835020d, 0.746151d, 0.991526d, 0.746567d, 0.914481d, 0.993582d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 10:
			width=9;
			height=25;
			rewardExponent=1.623073d;
			evilness = 0.587398d;
			evilAgentType = 1;
			benchmarkScore=2783.000000d;
           
			pieceWeights=new double[]{0.564613d, 0.598082d, 0.555694d, 0.792100d, 0.720634d, 0.688409d, 0.554907d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 11:
			width=9;
			height=20;
			rewardExponent=1.889887d;
			evilness = 0.228675d;
			evilAgentType = 3;
			benchmarkScore=3876.000000d;
           
			pieceWeights=new double[]{0.932048d, 0.954532d, 0.963663d, 0.729669d, 0.618510d, 0.628450d, 0.504277d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 12:
			width=9;
			height=20;
			rewardExponent=1.414013d;
			evilness = 0.039145d;
			evilAgentType = 2;
			benchmarkScore=3884.000000d;
           
			pieceWeights=new double[]{0.988037d, 0.595063d, 0.586406d, 0.672353d, 0.549412d, 0.818253d, 0.802961d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 13:
			width=7;
			height=18;
			rewardExponent=1.620640d;
			evilness = 0.475067d;
			evilAgentType = 3;
			benchmarkScore=4936.000000d;
           
			pieceWeights=new double[]{0.834904d, 0.546818d, 0.925280d, 0.590198d, 0.529307d, 0.602386d, 0.959623d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 14:
			width=11;
			height=22;
			rewardExponent=1.331572d;
			evilness = 0.241642d;
			evilAgentType = 2;
			benchmarkScore=2723.000000d;
           
			pieceWeights=new double[]{0.729668d, 0.946205d, 0.529460d, 0.517892d, 0.620833d, 0.741798d, 0.732108d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 15:
			width=6;
			height=21;
			rewardExponent=1.993211d;
			evilness = 0.324070d;
			evilAgentType = 2;
			benchmarkScore=7035.000000d;
           
			pieceWeights=new double[]{0.501213d, 0.589030d, 0.923155d, 0.689960d, 0.713512d, 0.718455d, 0.730647d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 16:
			width=7;
			height=22;
			rewardExponent=1.919996d;
			evilness = 0.402114d;
			evilAgentType = 2;
			benchmarkScore=5100.000000d;
           
			pieceWeights=new double[]{0.621860d, 0.578866d, 0.729988d, 0.907023d, 0.829422d, 0.701057d, 0.786535d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 17:
			width=10;
			height=24;
			rewardExponent=1.738796d;
			evilness = 0.152057d;
			evilAgentType = 2;
			benchmarkScore=3025.000000d;
           
			pieceWeights=new double[]{0.896008d, 0.876069d, 0.982038d, 0.891960d, 0.822995d, 0.723793d, 0.616061d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 18:
			width=10;
			height=24;
			rewardExponent=1.575956d;
			evilness = 0.025430d;
			evilAgentType = 2;
			benchmarkScore=3122.000000d;
           
			pieceWeights=new double[]{0.636568d, 0.770861d, 0.892148d, 0.581111d, 0.888328d, 0.876800d, 0.550854d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
          case 19:
			width=6;
			height=20;
			rewardExponent=1.355861d;
			evilness = 0.278261d;
			evilAgentType = 3;
			benchmarkScore=6093.000000d;
           
			pieceWeights=new double[]{0.909952d, 0.746914d, 0.509843d, 0.698054d, 0.511109d, 0.519636d, 0.880783d};
			return new GameState(width,height,possibleBlocks,pieceWeights,rewardExponent,evilness,evilAgentType,benchmarkScore);
			
            default:
                System.err.println("Invalid Parameter Set Requested ("+ParamSet+") : using Param Set 0");
                return setParameters(0);
        }
    }
}