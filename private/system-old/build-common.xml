<?xml version="1.0" encoding="UTF-8"?>

<project basedir=".."   name="rl-comp-common">
<dirname property="imported.basedir" file="${ant.file.imported}"/>

<property name="rlcomp.libs.dir"   value="${rl.comp.system.directory}/../libraries"/>
<property name="proving.jar.debug.dir" value="${rl.comp.system.directory}/proving/debugJars"/>
<property name="dist.dir"   value="dist"/>
<property name="src.dir"     value="src"/>
<property name="test.dir"	value="tests"/>
<property name="docs.dir"     value="javadocs"/>
<property name="build.dir"   value="build"/>
<property name="classes.dir" value="${build.dir}/classes"/>
<property name="test.classes.dir" value="${build.dir}/testclasses"/>
<property name="test.reports"   value="reports"/>
<property name="test.raw"   value="reports/raw"/>


<property name="junit.jar" value="${rlcomp.libs.dir}/junit.jar" />
<property name="result.jar" value="${dist.dir}/${main.project.name}.jar" />

<property name="rlvizlib.jar" value="${rlcomp.libs.dir}/RLVizLib.jar" />
<path id="rlvizlib.classpath" location="${rlvizlib.jar}"/>
<path id="junit.classpath" location="${junit.jar}"/>
<path id="test.build.classpath" location="${test.classes.dir}"/>

<property name="env.dist.dir"   value="${rlcomp.libs.dir}"/>
<property name="env.viz.dist.dir"   value="${rlcomp.libs.dir}"/>
<property name="agent.dist.dir"   value="${rlcomp.libs.dir}"/>
<property name="agent.viz.dist.dir"   value="${rlcomp.libs.dir}"/>


<taskdef resource="proguard/ant/task.properties" classpath="${rlcomp.libs.dir}/proguard.jar" />

<taskdef resource="net/sf/antcontrib/antlib.xml">
  <classpath>
    <pathelement location="${rlcomp.libs.dir}/ant-contrib-1.0b3.jar"/>
  </classpath>
</taskdef>


<target name="get.svn.version" description="Get the current subversion revision number of the project">
    <exec executable="svnversion"
          failifexecutionfails="no"
          outputproperty="svn.revision.version">
    </exec>
</target>

<target name="get.rlvizlib.version">
    <exec executable="java"
          failifexecutionfails="no"
          outputproperty="rlvizlib.fromjava.spec.version">
		<arg value="-jar"/>
		<arg value="${rlvizlib.jar}"/>
		<arg value="--version"/>
    </exec>
	<if>
		<!-- This is a quick hack so we can use this script without upgrading to RLVizLib 1.2 -->
		<contains string="${rlvizlib.fromjava.spec.version}" substring="fail" casesensitive="false" />
		<then>
			<property name="rlvizlib.spec.version" value="1.1"/>
		</then>
		<else>
			<property name="rlvizlib.spec.version" value="${rlvizlib.fromjava.spec.version}"/>
		</else>
	</if>
</target>


<target name="rl-set-properties" description="sets up a few things according to whether we're build an agent or an environment">
		<if>
		 <equals arg1="${project.type}" arg2="environment" />
		 <then>
			<property name="main.dist.dir" value="${env.dist.dir}" />
			<property name="viz.dist.dir" value="${env.viz.dist.dir}" />
			<property name="valid.project.type.found" value="true"/>
		 </then>
		</if>
		<if>
		 <equals arg1="${project.type}" arg2="agent" />
		 <then>
			<property name="main.dist.dir" value="${agent.dist.dir}" />
			<property name="viz.dist.dir" value="${agent.viz.dist.dir}" />
			<property name="valid.project.type.found" value="true"/>
		 </then>
		</if>
		
		<fail message="property project.type should be one of agent or environment">
		     <condition>
		       <not>
		         <isset property="valid.project.type.found"/>
		       </not>
		     </condition>
		   </fail>

		<if>
			<equals arg1="${project.has.viz}" arg2="true" />
				<then>
					<property name="should.build.viz" value="true" />
				</then>
			<else>
		</else>
			</if>
			
		
		<property name="main.result.jar" value="${main.dist.dir}/${main.project.name}.jar" />
		<path id="main.result.jar.classpath" location="${main.result.jar}"/>
		<property name="viz.result.jar" value="${viz.dist.dir}/${viz.project.name}.jar" />
		
</target>



<target name="rl-clean-main" depends="rl-set-properties">
	<delete dir="${build.dir}"/>
	<delete dir="${docs.dir}"/>
	<delete file="${main.result.jar}"/>
</target>

<target name="rl-clean-viz" if="should.build.viz" depends="rl-set-properties">
	<delete file="${viz.result.jar}" />
</target>

<target name="rl-clean" depends="rl-clean-main,rl-clean-viz" />

<target name="rl-build" depends="rl-set-properties">
   <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}"> 
		<classpath>
            <path refid="rlvizlib.classpath" />
		    <path refid="project.extra.classpath" />
		</classpath>
	</javac>
</target>

<target name="rl-build-viz" depends="rl-set-properties">
   <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}"> 
		<classpath>
            <path refid="rlvizlib.classpath" />
		    <path refid="project.extra.classpath" />
		</classpath>
	</javac>
</target>

<target name="rl-jar-main" depends="rl-build,get.svn.version,get.rlvizlib.version" >
    <mkdir dir="${main.dist.dir}" />
    <jar destfile="${main.result.jar}" basedir="${classes.dir}" >
        <manifest>
		   <attribute name="RLVizLib-Link-Version" value="${rlvizlib.spec.version}"/>
		    <section name="${main.package.name}">
		      <attribute name="Specification-Title" value="${main.project.name}"/>
		      <attribute name="Specification-Version" value="${main.package.spec.version}"/>
		      <attribute name="Specification-Vendor" value="RLAI"/>
		      <attribute name="Implementation-Title" value="${main.project.name}"/>
		      <attribute name="Implementation-Version" value="Build:${svn.revision.version}"/> 
		      <attribute name="Implementation-Vendor" value="${main.vendor.name}"/>
		    </section>
        </manifest>
    </jar>
</target>

<target name="rl-jar-viz" depends="rl-build-viz,get.svn.version,get.rlvizlib.version" if="should.build.viz" >
    <mkdir dir="${viz.dist.dir}" />
    <jar destfile="${viz.result.jar}" basedir="${classes.dir}" >
        <manifest>
		   <attribute name="RLVizLib-Link-Version" value="${rlvizlib.spec.version}"/>
		    <section name="${viz.package.name}">
		      <attribute name="Specification-Title" value="${viz.project.name}"/>
		      <attribute name="Specification-Version" value="${viz.package.spec.version}"/>
		      <attribute name="Specification-Vendor" value="RLAI"/>
		      <attribute name="Implementation-Title" value="${viz.project.name}"/>
		      <attribute name="Implementation-Version" value="Build:${svn.revision.version}"/> 
		      <attribute name="Implementation-Vendor" value="${viz.vendor.name}"/>
		    </section>
        </manifest>
    </jar>
</target>

<target name="rl-jar" depends="rl-jar-main,rl-jar-viz" />

<target name="obfuscate">
    <proguard>
        -injars JarWithAllClasses.jar
        -outjars newEnv.jar
        -libraryjars ../../../rl-competition/system/libraries/RLVizLib.jar:/System/Library/Frameworks/JavaVM.framework/Classes/classes.jar
        -renamesourcefileattribute SourceFile
        -keepattributes Signature, *Annotation*

        -dontshrink
        -dontoptimize

        -keep public class * {
        public static *;
        }

        -keepclassmembers class *{
        public static *;
        }

        -keepnames class * extends rlVizLib.Environments.EnvironmentBase{
        public *** env_init(***);
        public *** env_start(***);
        public *** env_step(***);
        public *** getDefaultParameters();
        public *** env_message(***);
        public *** env_cleanup(***);
        public *** env_get_random_seed(***);
        public *** env_get_stat(***);
        public *** env_set_random_seed(***);
        public *** env_set_state(***);
        public *** getVizualizer(***);
        }
    </proguard> 
    <copy file="newEnv.jar" tofile="JarWithAllClasses.jar" />
    <delete file="newEnv.jar" />        
</target>


<!--
<target name="rl-javadoc">
    <mkdir dir="${docs.dir}"/>
    <javadoc sourcepath="${src.dir}" destdir="${docs.dir}" classpathref="rlvizlib.classpath"/>
</target>

<target name="rl-build-tests" depends="rl-build">
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${test.dir}"/>
    <javac srcdir="${test.dir}" destdir="${classes.dir}">
        <classpath>
            <path refid="application"/>
            <path refid="junit" />
        </classpath>
    </javac>
</target>

<target name="rl-junit" depends="jar">
     <junit printsummary="yes"  >
         <classpath>
              <path refid="application"/>
          </classpath>

         <batchtest fork="yes">
             <fileset dir="${src.dir}" includes="**/*Test.java"/>
         </batchtest>
     </junit>
 </target>

-->


</project>